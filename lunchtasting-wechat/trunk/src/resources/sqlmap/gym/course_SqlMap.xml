<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="com.lunchtasting.server.po.lt.Course">

	<typeAlias alias="Course" type="com.lunchtasting.server.po.lt.Course" />

	<resultMap id="CourseResult" class="com.lunchtasting.server.po.lt.Course">
		<result property="id" column="id"  jdbcType="BIGINT" />
		<result property="name" column="name" jdbcType="VARCHAR" />
		<result property="price" column="price" jdbcType="DOUBLE" />
		<result property="marketPrice" column="market_price" jdbcType="DOUBLE" />
		<result property="imgUrl" column="img_url" jdbcType="VARCHAR" />
        <result property="imgArray" column="img_array" jdbcType="VARCHAR" />
		<result property="beginTime" column="begin_time" jdbcType="VARCHAR" />
		<result property="endTime" column="end_time" jdbcType="VARCHAR" />
		<result property="createTime" column="create_time" jdbcType="DATETIME" />
	</resultMap>
	
	<select id="getById" parameterClass="map" resultMap="CourseResult">
		SELECT * FROM course WHERE id = #id:BIGINT#
	</select>
	
	<select id="queryCourseMealList"  parameterClass="map" resultClass="java.util.HashMap">
		SELECT * FROM course_meal WHERE course_id = #courseId# AND begin_time > NOW()
			AND flag = 0 ORDER BY sort
	</select>
	
	<select id="getCourseDtail"  parameterClass="map" resultClass="java.util.HashMap">
		SELECT * FROM course WHERE id = #courseId# AND flag = 0
    </select>
    
    <select id="getCourseMealDetail"  parameterClass="map" resultClass="java.util.HashMap">
		SELECT a.id AS course_meal_id,a.course_id,a.coach_id,a.gym_id
			,a.name,a.price,a.people_number,a.course_number,a.str_time,a.type
			,DATE_FORMAT(a.begin_time,'%c月%e日') AS begin_time
			,DATE_FORMAT(a.end_time,'%c月%e日') AS end_time
			,b.name AS course_name
			,c.name AS coach_name
			,IFNULL(d.order_count,0) AS order_count
			
			FROM (SELECT * FROM course_meal WHERE id = #courseMealId# 
				AND begin_time > NOW()) a
			
			JOIN course b ON(a.course_id = b.id)	
			
			LEFT JOIN coach c ON(a.coach_id = c.id)
			
			LEFT JOIN(SELECT course_meal_id,COUNT(id) AS order_count FROM course_order 
							WHERE course_meal_id = #courseMealId# AND status = 2) 
				d ON(a.id = d.course_meal_id)
    </select>
	
	<!-- 
	<select id="getCourseCount"  parameterClass="map" resultClass="java.lang.Integer">
        SELECT COUNT(id) FROM course WHERE flag = 0
        <isNotNull property="areaId">
            AND area_id = #areaId#
        </isNotNull>
        <isNotNull property="categoryId">
        	AND category_id = #categoryId#
        </isNotNull>
    </select>
    
    <select id="queryCourseList"  parameterClass="map" resultClass="java.util.HashMap" remapResults="true">
        SELECT a.id AS course_id,a.seller_id,a.name AS course_name
        	,a.price,a.market_price,a.img_url,a.begin_time,a.end_time
        	,b.name AS seller_name,b.address
           	
            FROM (SELECT * FROM course WHERE flag = 0 
		        	<isNotNull property="areaId">
		            	AND area_id = #areaId#
		        	</isNotNull>
		        	<isNotNull property="categoryId">
		           		AND category_id = #categoryId#
		        	</isNotNull>
			        <isNotNull property="pageSize">
			        	LIMIT #page#, #pageSize#
					</isNotNull>
            ) a
            
            JOIN (SELECT id,name,address FROM gym WHERE is_open = 0 AND flag = 0) b ON(a.gym_id = b.id)
    </select>
	
    <select id="queryCourseCategoryList"  parameterClass="map" resultClass="java.util.HashMap">
    	SELECT id,name FROM course_category WHERE flag = 0
    		<isNotNull property="level">
    			AND level = #level#
    		</isNotNull>
    	ORDER BY sort
    </select>
    
    <select id="queryAllCourseCategoryList"  parameterClass="map" resultClass="java.util.HashMap">
    	SELECT a.id AS category_id,a.name,b.str
    	
			FROM (SELECT * FROM course_category WHERE level = 1 ORDER BY sort ASC) a
			
        	LEFT JOIN (SELECT GROUP_CONCAT(id,'-',name ORDER BY sort ASC separator  '|') str,parent_id 
        		FROM course_category WHERE level = 2 GROUP BY parent_id ) b ON (a.id = b.parent_id)
    </select>
    
    <select id="querySellerCourseList"  parameterClass="map" resultClass="java.util.HashMap">
    	SELECT id AS course_id,name,img_url,price,market_price
    		 FROM course WHERE gym_id = #gymId# AND flag = 0
    </select>
    
   	<select id="getConfirmCourse"  parameterClass="map" resultClass="java.util.HashMap">
    	SELECT a.id AS course_id,IFNULL(a.name,'') AS course_name,a.price,a.begin_time,a.end_time
    		,b.id AS gym_id,b.name AS seller_name,b.address
    		
    		FROM (SELECT id,gym_id,name,price,begin_time,end_time FROM course WHERE id = #courseId# AND flag = 0) a
    		
    		JOIN (SELECT id,name,address FROM gym WHERE flag = 0) 
    			b ON (a.gym_id = b.id)
	</select> -->
</sqlMap>